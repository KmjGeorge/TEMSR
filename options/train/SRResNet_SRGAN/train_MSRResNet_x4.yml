# Modified SRResNet w/o BN from:
# Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network

# ----------- Commands for running
# ----------- Single GPU with auto_resume
# PYTHONPATH="./:${PYTHONPATH}"  CUDA_VISIBLE_DEVICES=0 python basicsr/train.py -opt options/train/SRResNet_SRGAN/train_MSRResNet_x4.yml --auto_resume

# general settings
name: 001_MSRResNet_x4_f64b16_DIV2K_1000k_B16G1_wandb
model_type: SRModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: datasets/DF2K/DIV2K_train_HR_sub
    dataroot_lq: datasets/DF2K/DIV2K_train_LR_bicubic_X4_sub
    meta_info_file: basicsr/data/meta_info/meta_info_DIV2K800sub_GT.txt
    # (for lmdb)
    # dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub.lmdb
    # dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic_X4_sub.lmdb
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb

    gt_size: 128     # 训练阶段裁剪 (crop) 的GT图像的尺寸大小，即训练的 label 大小
    use_hflip: true  # 是否开启水平方向图像增强 (随机水平翻转图像)
    use_rot: true  # 是否开启旋转图像增强 (随机旋转图像)

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 100  # 放大 dataset 的长度倍数 (默认为1)。可以扩大 一个 epoch 所需 iterations
    prefetch_mode: ~  # 预读取数据模式  cuda/cpu或~   如果使用cuda,额外设置pin_memory: True   使用cpu 设置num_prefetch_queue: 1(默认为1)

  val:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Set5/GTmod12
    dataroot_lq: datasets/Set5/LRbicx4
    io_backend:
      type: disk

  val_2:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: datasets/Set14/GTmod12
    dataroot_lq: datasets/Set14/LRbicx4
    io_backend:
      type: disk

# network structures
network_g:
  type: MSRResNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 16
  upscale: 4

# path
path:
  pretrain_network_g: ~
  param_key_g: params   # 读取的预训练的参数 key。若需要使用 EMA 模型，需要改成params_ema
  strict_load_g: true
  resume_state: ~  # 重启训练的 state 路径, 在 experiments/exp_name/training_states 目录下  resume_state设置后, 会覆盖 pretrain_network_g 的设定

# training settings
train:
  ema_decay: 0.999  # EMA更新权重
  optim_g:     # 后缀_g和network_g中的后缀一一对应，表示该网络的优化器
    type: Adam
    lr: !!float 2e-4  # 以float解释后面的数字
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [250000, 250000, 250000, 250000]
    restart_weights: [1, 1, 1, 1]
    eta_min: !!float 1e-7

  total_iter: 1000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4   # 计算指标时 crop 图像边界像素范围 (不纳入计算范围)
      test_y_channel: false   # 是否转成YCbCr通道计算
      better: higher  # the higher, the better. Default: higher 指标是否是越高越好
    niqe:
      type: calculate_niqe
      crop_border: 4
      better: lower  # the lower, the better

# logging settings
logger:
  print_freq: 100   # 每隔多少次打印一次信息
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true # tensorboard
  wandb:  # wandb
    project: ~
    resume_id: ~

# dist training settings  分布式训练配准
dist_params:
  backend: nccl
  port: 29500
