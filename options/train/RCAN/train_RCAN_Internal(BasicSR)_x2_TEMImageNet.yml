# general settings
name: 106_RCANInternalx2_pretrained_TEMImageNet_bat128_inc3feature64group6block10_lr1e-5_1000iters
model_type: InternalModel
scale: 2
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10
crop_size: 32

# dataset and data loader settings
datasets:
  train:
    name: TEMImageNet
    type: InternalDataset
    dataroot_lq: D:/Datasets/TEM-ImageNet-v1.3-master/image_bic128/full
    filename_tmpl: '{}'
    io_backend:
      type: disk

    use_degradation: false

    use_hflip: false
    use_rot: false

    # data loader
    num_worker_per_gpu: 1
    batch_size_per_gpu: 128
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: true

  val:
    name: TEMImageNet
    type: PairedImageDataset
    dataroot_gt: D:/Datasets/TEM-ImageNet-v1.3-master/noBackgroundnoNoise/full
    dataroot_lq: D:/Datasets/TEM-ImageNet-v1.3-master/image_bic128/full
    io_backend:
      type: disk

# network structures
network_g:
  type: RCAN_Internal
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_group: 6
  num_block: 10
  squeeze_factor: 16
  upscale: 2
  res_scale: 1
  img_range: 255.
  rgb_mean: [0.1980, 0.1980, 0.1980]

# path
path:
  pretrain_network_g: D:/github/TEMSR_BasicSR/experiments/pretrained_models/RCAN/101_RCANx2_scratch_TEMImageNet_bat8_inc3feature64group6block10_lr1e-4_240000.pth
  strict_load_g: False
  resume_state: ~

# training settings
train:
  ema_decay: 0
  optim_g:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200, 500]
    gamma: 0.8

  total_iter: 1000
  warmup_iter: 0

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
#  perceptual_opt:
#    type: PerceptualLoss
#    layer_weights:
#      # before relu
#      'conv1_2': 0.1
#      'conv2_2': 0.1
#      'conv3_4': 1
#      'conv4_4': 1
#      'conv5_4': 1
#    vgg_type: vgg19
#    use_input_norm: true
#    perceptual_weight: !!float 1.0
#    style_weight: 0
#    range_norm: false
#    criterion: l1

# validation settings
val:
  val_freq: !!float 1000
  save_img: true

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
      better: higher
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
      better: higher
    niqe:
      type: calculate_niqe
      crop_border: 0
      test_y_channel: false
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
#dist_params:
#  backend: nccl
#  port: 29500
