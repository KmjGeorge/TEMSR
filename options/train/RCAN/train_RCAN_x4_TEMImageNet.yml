# TODO
# general settings
name: 111_RCANx4_scratch_TEMImageNet_bat8_inc3feature64group6block10_lr1e-4
model_type: SRModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: TEMImageNet
    type: PairedImageDataset
    dataroot_gt: D:/datasets/TEM-ImageNet-v1.3-master/noBackgroundnoNoise/train
    dataroot_lq: D:/datasets/TEM-ImageNet-v1.3-master/image_bic64/train
    # meta_info: D:/github/TEMSR_BasicSR/basicsr/data/meta_info/meta_info_TEMImageNet_GT.txt

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # high level degradation
#    blur_kernel_size: 21
#    kernel_list: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
#    kernel_prob: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
#    sinc_prob: 0.1
#    blur_sigma: [ 0.2, 3 ]
#    betag_range: [ 0.5, 4 ]
#    betap_range: [ 1, 2 ]
#
#    blur_kernel_size2: 21
#    kernel_list2: [ 'iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso' ]
#    kernel_prob2: [ 0.45, 0.25, 0.12, 0.03, 0.12, 0.03 ]
#    sinc_prob2: 0.1
#    blur_sigma2: [ 0.2, 1.5 ]
#    betag_range2: [ 0.5, 4 ]
#    betap_range2: [ 1, 2 ]
#
#    final_sinc_prob: 0.8

    # common augment
    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 1
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: TEMImageNet
    type: PairedImageDataset
    dataroot_gt: D:/datasets/TEM-ImageNet-v1.3-master/noBackgroundnoNoise/val
    dataroot_lq: D:/datasets/TEM-ImageNet-v1.3-master/image_bic64/val
    io_backend:
      type: disk

  val_2:
    name: TEMSR
    type: PairedImageDataset
    dataroot_gt: D:/datasets/TEMPatch for SR/GT/Val
    dataroot_lq: D:/Datasets/TEMPatch for SR/LQ_BicOnly/64/Val
    io_backend:
      type: disk

# network structures
network_g:
  type: RCAN
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_group: 6
  num_block: 10
  squeeze_factor: 16
  upscale: 4
  res_scale: 1
  img_range: 255.
  rgb_mean: [0.1980, 0.1980, 0.1980]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [180000]
    gamma: 0.5

  total_iter: 250000
  warmup_iter: 3000

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
      better: higher
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
      better: higher
    niqe:
      type: calculate_niqe
      crop_border: 0
      test_y_channel: false
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
#dist_params:
#  backend: nccl
#  port: 29500
