name: InstructIR_p256b8
model_type: InstructIRModel
scale: 1
num_gpu: 1
manual_seed: 12345

gt_size: 256

datasets:
  train:
    name: SimReSe2_train
    type: InstructIRDataset
    phase: train
    color: gray
    # http_proxy: http://localhost:7890  # for hugging face connection
    lm_path: F:/github/TEMSR/models/bge-micro-v2
    meta_info: F:/Datasets/InstructTEMSR/meta_info_train.csv
    # instruct_file_path: ~
    lm_head_weight_path: F:/github/TEMSR/models/lm_head/model_head_60.pth
    io_backend:
      type: disk
    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 20
    prefetch_mode: cuda
    pin_memory: true

  val:
    name: SimReSe2_Val
    type: InstructIRDataset
    phase: val
    lm_path: F:/github/TEMSR/models/bge-micro-v2
    color: gray
    meta_info: F:/Datasets/InstructTEMSR/meta_info_val.csv
    lm_head_weight_path: F:/github/TEMSR/models/lm_head/model_head_60.pth
    io_backend:
      type: disk


network_g:
  type: InstructIR
  img_channel: 1
  width: 32
  enc_blk_nums: [2,2,4,8]
  middle_blk_num: 4
  dec_blk_nums: [2,2,2,2]
  txtdim: 256

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: F:/github/TEMSR/experiments/InstructIR_p256b8/training_states/90000.state

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0.
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [100000]
    restart_weights: [1]
    eta_min: !!float 1e-6
  total_iter: 100000
  warmup_iter: -1

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  fft_opt:
    type: FFTLoss
    loss_weight: 0.1
    reduction: mean

val:
 val_freq: !!float 1e4
 save_img: true
 metrics:
   psnr: # metric name
     type: calculate_psnr
     crop_border: 0
     test_y_channel: false
   ssim:
     type: calculate_ssim
     crop_border: 0
     test_y_channel: false
#   snr:
#     type: calculate_snr
#   tv:
#     type: calculate_tv

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

